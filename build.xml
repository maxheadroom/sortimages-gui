<?xml version="1.0" encoding="UTF-8"?>
<!-- CVS - Header -->
<!-- $Id: build.xml,v 1.15 2006/02/08 13:54:44 zero_data Exp $ -->
<project basedir="." default="all" name="SortImagesGUI">

	<!-- <import file="nbproject/build-impl.xml"/> -->
    <property name="src" value="src" />
	<property name="lib" value="lib" />
    <property name="build" value="BUILD" />
    <property name="doku" value="JAVADOC" />
    <property name="package" value="PACKAGES" />
    <property name="version" value="1.3.1" />
    <property name="testdir" value="${basedir}/test" />
    <property name="installdir" value="/usr/local/SortImagesGUI" />
    <property name="stylesheet" value="/home/m0554/src/docbook-xsl-1.64.0/html/docbook.xsl"/>
    <property name="dbname" value="sortimagestest"/>
    <property name="dbuser" value="photo"/>
    <property name="dbpass" value=""/>
    <property name="dbhost" value="localhost"/>
    <property name="dbtable" value="md5sums"/>
    <property name="dbport" value="3306"/>    
    <property name="targetdir" value="${basedir}/target"/>
	
	<!-- Define the MacOS X App builder task -->
	<taskdef name="bundleapp"
             classname="com.oracle.appbundler.AppBundlerTask"   
             classpath="lib/appbundler-1.0.jar" />


    <target name="all" depends="install">
    </target>
    <target name="xslt">
		<exec executable="/usr/bin/xsltproc" os="Linux" output="${basedir}/documentation/xslt.log">
  			<arg line="-o ${basedir}/documentation/html/index.html ${stylesheet} ${basedir}/documentation/documentation.xml"/>
	</exec>
    </target>
    
    <target name="init">
        <tstamp/>
        <mkdir dir="${build}"/>
        <mkdir dir="${package}"/>
        <mkdir dir="${doku}"/>
    </target>
    
    <target name="compile" depends="init">
        <!-- <javac  srcdir="${src}" destdir="${build}"/> -->
    	<javac srcdir="${src}"
         destdir="${build}"
		
         debug="on">
    		<classpath>
    			      <pathelement path="${classpath}"/>
    			      <fileset dir="lib">
    			        <include name="**/*.jar"/>
    			      </fileset>
    			 </classpath>
    		</javac>
    
    </target>
    
    <target name="jar" depends="compile">
    	
    	<unzip dest="${build}">
  	      <fileset dir="${lib}">
      			        <include name="**/*.jar"/>
      	  </fileset>
      		
    	</unzip>
    	
        <jar  jarfile="${package}/SortImagesGUI-${version}.jar" basedir="${build}">
        	
        	
		<manifest>
			<attribute name="Main-Class" value="org.zurell.java.SortImagesGUI.SortImagesGUI"/>
			<attribute name="Version" value="${version}"/>

		</manifest>
        	

	</jar>
    </target>
    
    <target name="javadoc" depends="init">
        <javadoc sourcepath="${src}" destdir="${doku}" private="true" >
		<package name="org.zurell.java.SortImagesGUI.*"/>
		<sourcepath location="${src}"/>
		<classpath location="${JAVA_HOME}:${src}"/>

	</javadoc>
    </target>

	<target name="test" depends="jar">
		<java jar="${package}/SortImagesGUI-${version}.jar" fork="true">
			<jvmarg value="-DCONFIGFILE=${basedir}/sortimages.properties"/>
			<arg value="${testdir}"/>
		</java>
	</target>

	<target name="clean" >
		<delete dir="${build}"/>
		<delete dir="${package}"/>
		<delete dir="${doku}"/>
	</target>

	<target name="install" depends="jar">
		<mkdir dir="${installdir}"/>
		<copy file="${package}/SortImagesGUI-${version}.jar" toFile="${installdir}/SortImagesGUI.jar"/>
		<copy file="start.sh.template" toFile="${installdir}/start.sh">
			<filterset>
				<filter token="installdir" value="${installdir}"/>
				<filter token="jarfile" value="SortImagesGUI.jar"/>
			</filterset>
		</copy>
		<copy file="sortimages.properties.template" toFile="${installdir}/sortimages.properties">
			<filterset>
				<filter token="dbname" value="${dbname}"/>
				<filter token="dbuser" value="${dbuser}"/>
				<filter token="dbpass" value="${dbpass}"/>
				<filter token="dbhost" value="${dbhost}"/>
				<filter token="dbtable" value="${dbtable}"/>	
				<filter token="dbport" value="${dbport}"/>			
				<filter token="targetdir" value="${targetdir}"/>	
			</filterset>
		</copy>
		<copy todir="${installdir}/javadoc">
			<fileset dir="${doku}"/>
		</copy>
	</target>
	
	<target name="package">
		<delete dir="${basedir}/cvs_export" includeEmptyDirs="true"></delete>
		<mkdir dir="${basedir}/cvs_export"/>
		<cvs command="export"
			cvsRoot=":ext:zero_data@cvs.sourceforge.net:/cvsroot/sortimages" 
			dest="cvs_export" cvsrsh="ssh" 
			date="tomorrow" 
			package="SortImagesGUI"/>
		<move todir="${basedir}/cvs_export/SortImagesGUI-${version}">
			<fileset dir="${basedir}/cvs_export/SortImagesGUI"/>
		</move>
		<delete dir="${basedir}/cvs_export/SortImagesGUI"/>
		<tar basedir="${basedir}/cvs_export/" tarfile="${basedir}/SortImagesGUI-${version}.tar">
			<tarfileset dir="${basedir}/cvs_export/" mode="755"/>
		</tar>
		<zip destfile="${basedir}/SortImagesGUI-${version}.src.zip" basedir="${basedir}/cvs_export/">
		</zip>
		<gzip src="${basedir}/SortImagesGUI-${version}.tar" zipfile="${basedir}/SortImagesGUI-${version}.src.tgz"/>
		<copy file="rpmbuild.template" toFile="${basedir}/SortImagesGUI-${version}.spec">
			<filterset>
				<filter token="version" value="${version}"/>
				<filter token="rpmfilelist" value="TOBEDONE"/>	
			</filterset>
		</copy>
	</target>
	
	<target name="sourceforge" depends="jar, package">
	<ftp server="upload.sourceforge.net"
       userid="anonymous"
       password="zero_data@users.sourceforge.net"
       remotedir="/incomming"
       binary="yes">
    <fileset dir="${basedir}">
    	<include name="SortImagesGUI-${version}.src.tgz"/>
    	<include name="SortImagesGUI-${version}.src.zip"/>
    	<include name="${package}/SortImagesGUI-${version}.jar.jar"/>
    </fileset>
  </ftp>
	</target>
	



	<!-- create a MacOS X executable Application Bundle -->
	<target name="make-bundle">
	        <bundleapp outputdirectory="${package}"
	            name="SortImages-GUI-${version}"
	            displayname="SortImages-GUI-${version}"
	            identifier="org.zurell.java.SortImagesGUI"
	            mainclassname="org.zurell.java.SortImagesGUI.SortImagesGUI"
				shortversion="${version}"
				applicationCategory="public.app-category.developer-tools">
	            <classpath file="${package}/SortImagesGUI-${version}.jar" />
				       
				   
				        <option value="-Dapple.laf.useScreenMenuBar=true"/>
				
	        </bundleapp>
	    </target>
	
	
</project>
